{"ast":null,"code":"export const fetchRestaurantData = async restaurantId => {\n  try {\n    const response = await fetch(\"https://hfbyctqhvfgudujgdgqp.supabase.co/functions/v1/getCategoryProductByRestaurant\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        restaurant_id: restaurantId\n      })\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erreur lors de l'appel à l'Edge Function :\", error);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["fetchRestaurantData","restaurantId","response","fetch","method","headers","body","JSON","stringify","restaurant_id","data","json","error","console","success","message"],"sources":["/Users/dwainyumco/Desktop/YumEats/website/template/template-1/template-1.0-yumco/src/Components/utils/api.jsx"],"sourcesContent":["export const fetchRestaurantData = async (restaurantId) => {\n    try {\n      const response = await fetch(\"https://hfbyctqhvfgudujgdgqp.supabase.co/functions/v1/getCategoryProductByRestaurant\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ restaurant_id: restaurantId }),\n      });\n  \n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Erreur lors de l'appel à l'Edge Function :\", error);\n      return { success: false, error: error.message };\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,MAAOC,YAAY,IAAK;EACvD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sFAAsF,EAAE;MACnHC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,aAAa,EAAER;MAAa,CAAC;IACtD,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,OAAO;MAAEE,OAAO,EAAE,KAAK;MAAEF,KAAK,EAAEA,KAAK,CAACG;IAAQ,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}