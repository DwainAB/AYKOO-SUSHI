{"ast":null,"code":"const BASE_URL = 'https://sasyumeats.com/api';\nexport const apiService = {\n  getFoods: async nameRestaurant => {\n    try {\n      const response = await fetch(`${BASE_URL}/foods/${nameRestaurant}`);\n      return await response.json();\n    } catch (error) {\n      throw error;\n    }\n  },\n  getAllCategories: async nameRestaurant => {\n    try {\n      const response = await fetch(`${BASE_URL}/foods/categories/${nameRestaurant}`, {\n        method: 'GET'\n      });\n      return await response.json();\n    } catch (error) {\n      throw error;\n    }\n  },\n  addClientAndOrder: async clientData => {\n    try {\n      const response = await fetch(`${BASE_URL}/foods/addClientAndOrder`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clientData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","apiService","getFoods","nameRestaurant","response","fetch","json","error","getAllCategories","method","addClientAndOrder","clientData","headers","body","JSON","stringify","ok","Error","status"],"sources":["/Users/dwainabrivard/Desktop/yumco/website/templates/template-1/Template-1-website-YumEats/src/Components/API/Api.jsx"],"sourcesContent":["const BASE_URL = 'https://sasyumeats.com/api'; \n\nexport const apiService = {\n\n    getFoods: async (nameRestaurant) => {\n        try {\n            const response = await fetch(`${BASE_URL}/foods/${nameRestaurant}`);\n            return await response.json();\n        } catch (error) {\n            throw error;\n        }\n    },\n\n\n    getAllCategories: async (nameRestaurant) => {\n        try {\n            const response = await fetch(`${BASE_URL}/foods/categories/${nameRestaurant}`, {\n                method: 'GET',\n            });\n            return await response.json();\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    addClientAndOrder: async (clientData) => {\n        try {\n            const response = await fetch(`${BASE_URL}/foods/addClientAndOrder`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(clientData),\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            throw error;\n        }\n    },\n\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4BAA4B;AAE7C,OAAO,MAAMC,UAAU,GAAG;EAEtBC,QAAQ,EAAE,MAAOC,cAAc,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,UAASG,cAAe,EAAC,CAAC;MACnE,OAAO,MAAMC,QAAQ,CAACE,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAGDC,gBAAgB,EAAE,MAAOL,cAAc,IAAK;IACxC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,qBAAoBG,cAAe,EAAC,EAAE;QAC3EM,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,OAAO,MAAML,QAAQ,CAACE,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDG,iBAAiB,EAAE,MAAOC,UAAU,IAAK;IACrC,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,0BAAyB,EAAE;QAChES,MAAM,EAAE,MAAM;QACdG,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;MACnC,CAAC,CAAC;MACF,IAAI,CAACP,QAAQ,CAACY,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBb,QAAQ,CAACc,MAAO,EAAC,CAAC;MAC7D;MACA,OAAO,MAAMd,QAAQ,CAACE,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK;IACf;EACJ;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}