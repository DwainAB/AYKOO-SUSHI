{"ast":null,"code":"var _jsxFileName = \"/Users/dwainyumco/Desktop/YumCo/website/website-client/AYKOO-SUSHI/src/data/restaurantData.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/lib/restaurantData.js\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../lib/supabase';\n\n// Création d'un contexte pour partager les données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantContext = /*#__PURE__*/createContext(null);\n\n// Hook personnalisé pour utiliser les données du restaurant\nexport function useRestaurantData() {\n  _s();\n  return useContext(RestaurantContext);\n}\n\n// Provider qui va récupérer et fournir les données\n_s(useRestaurantData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function RestaurantProvider({\n  children\n}) {\n  _s2();\n  const [restaurantData, setRestaurantData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchRestaurantData() {\n      try {\n        // Récupération des données de la table restaurants\n        const {\n          data,\n          error\n        } = await supabase.from('restaurants').select('*').limit(1).single();\n        if (error) throw error;\n        setRestaurantData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données du restaurant:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n    fetchRestaurantData();\n  }, []);\n  const value = {\n    restaurantData,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(RestaurantContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n// Fonction d'aide pour récupérer directement les données (alternative au contexte)\n_s2(RestaurantProvider, \"Kaou6+cRy0oB03oUk7a4FXAT7YE=\");\n_c = RestaurantProvider;\nexport async function getRestaurantData() {\n  const {\n    data,\n    error\n  } = await supabase.from('restaurants').select('*').limit(1).single();\n  if (error) throw error;\n  return data;\n}\nvar _c;\n$RefreshReg$(_c, \"RestaurantProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","supabase","jsxDEV","_jsxDEV","RestaurantContext","useRestaurantData","_s","RestaurantProvider","children","_s2","restaurantData","setRestaurantData","loading","setLoading","error","setError","fetchRestaurantData","data","from","select","limit","single","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","getRestaurantData","$RefreshReg$"],"sources":["/Users/dwainyumco/Desktop/YumCo/website/website-client/AYKOO-SUSHI/src/data/restaurantData.jsx"],"sourcesContent":["// src/lib/restaurantData.js\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../lib/supabase'; \n\n// Création d'un contexte pour partager les données\nconst RestaurantContext = createContext(null);\n\n// Hook personnalisé pour utiliser les données du restaurant\nexport function useRestaurantData() {\n  return useContext(RestaurantContext);\n}\n\n// Provider qui va récupérer et fournir les données\nexport function RestaurantProvider({ children }) {\n  const [restaurantData, setRestaurantData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchRestaurantData() {\n      try {\n        // Récupération des données de la table restaurants\n        const { data, error } = await supabase\n          .from('restaurants')\n          .select('*')\n          .limit(1)  \n          .single();  \n\n        if (error) throw error;\n        \n        setRestaurantData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données du restaurant:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n\n    fetchRestaurantData();\n  }, []);\n\n  const value = {\n    restaurantData,\n    loading,\n    error\n  };\n\n  return (\n    <RestaurantContext.Provider value={value}>\n      {children}\n    </RestaurantContext.Provider>\n  );\n}\n\n// Fonction d'aide pour récupérer directement les données (alternative au contexte)\nexport async function getRestaurantData() {\n  const { data, error } = await supabase\n    .from('restaurants')\n    .select('*')\n    .limit(1)\n    .single();\n    \n  if (error) throw error;\n  return data;\n}"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,QAAQ,QAAQ,iBAAiB;;AAE1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGP,aAAa,CAAC,IAAI,CAAC;;AAE7C;AACA,OAAO,SAASQ,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAClC,OAAON,UAAU,CAACI,iBAAiB,CAAC;AACtC;;AAEA;AAAAE,EAAA,CAJgBD,iBAAiB;AAKjC,OAAO,SAASE,kBAAkBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAC/C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAeiB,mBAAmBA,CAAA,EAAG;MACnC,IAAI;QACF;QACA,MAAM;UAAEC,IAAI;UAAEH;QAAM,CAAC,GAAG,MAAMb,QAAQ,CACnCiB,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC,CACRC,MAAM,CAAC,CAAC;QAEX,IAAIP,KAAK,EAAE,MAAMA,KAAK;QAEtBH,iBAAiB,CAACM,IAAI,CAAC;QACvBJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,2DAA2D,EAAEA,KAAK,CAAC;QACjFC,QAAQ,CAACD,KAAK,CAAC;QACfD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAG,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG;IACZb,cAAc;IACdE,OAAO;IACPE;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,iBAAiB,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EACtCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC;;AAEA;AAAAnB,GAAA,CA1CgBF,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AA2ClC,OAAO,eAAeuB,iBAAiBA,CAAA,EAAG;EACxC,MAAM;IAAEb,IAAI;IAAEH;EAAM,CAAC,GAAG,MAAMb,QAAQ,CACnCiB,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,CAAC,CACRC,MAAM,CAAC,CAAC;EAEX,IAAIP,KAAK,EAAE,MAAMA,KAAK;EACtB,OAAOG,IAAI;AACb;AAAC,IAAAY,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}