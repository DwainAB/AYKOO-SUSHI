{"ast":null,"code":"var _jsxFileName = \"/Users/dwainyumco/Desktop/YumCo/website/website-client/AYKOO-SUSHI/src/data/restaurantData.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/lib/restaurantData.js\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../lib/supabase';\nimport TextJson from \"../Components/TextJson/TextJson.json\";\n\n// Création d'un contexte pour partager les données\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantContext = /*#__PURE__*/createContext(null);\n\n// Hook personnalisé pour utiliser les données du restaurant\nexport function useRestaurantData() {\n  _s();\n  return useContext(RestaurantContext);\n}\n\n// Provider qui va récupérer et fournir les données\n_s(useRestaurantData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function RestaurantProvider({\n  children\n}) {\n  _s2();\n  const [restaurantData, setRestaurantData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchRestaurantData() {\n      try {\n        // Récupération des données de la table restaurants\n        const {\n          data,\n          error\n        } = await supabase.from('restaurants').select('*').eq('id', TextJson.refRestaurant).single();\n        if (error) throw error;\n\n        // Récupération de l'adresse à partir de address_id\n        const {\n          data: addressData,\n          error: addressError\n        } = await supabase.from('addresses').select('*').eq('id', data.address_id) // Utilisation de address_id\n        .single();\n        if (addressError) throw addressError;\n\n        // Ajout de l'adresse aux données du restaurant\n        data.address = addressData;\n\n        // Récupération des heures d'ouverture du restaurant\n        const {\n          data: hoursData,\n          error: hoursError\n        } = await supabase.from('restaurant_hour').select('*').eq('restaurant_id', data.id); // Utilisation de l'id du restaurant\n\n        if (hoursError) throw hoursError;\n\n        // Ajout des heures d'ouverture aux données du restaurant\n        data.hours = hoursData;\n        setRestaurantData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données du restaurant:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n    fetchRestaurantData();\n  }, []);\n  const value = {\n    restaurantData,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(RestaurantContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n// Fonction d'aide pour récupérer directement les données (alternative au contexte)\n_s2(RestaurantProvider, \"Kaou6+cRy0oB03oUk7a4FXAT7YE=\");\n_c = RestaurantProvider;\nexport async function getRestaurantData() {\n  const {\n    data,\n    error\n  } = await supabase.from('restaurants').select('*').limit(1).single();\n  if (error) throw error;\n  return data;\n}\nvar _c;\n$RefreshReg$(_c, \"RestaurantProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","supabase","TextJson","jsxDEV","_jsxDEV","RestaurantContext","useRestaurantData","_s","RestaurantProvider","children","_s2","restaurantData","setRestaurantData","loading","setLoading","error","setError","fetchRestaurantData","data","from","select","eq","refRestaurant","single","addressData","addressError","address_id","address","hoursData","hoursError","id","hours","console","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","getRestaurantData","limit","$RefreshReg$"],"sources":["/Users/dwainyumco/Desktop/YumCo/website/website-client/AYKOO-SUSHI/src/data/restaurantData.jsx"],"sourcesContent":["// src/lib/restaurantData.js\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../lib/supabase'; \nimport TextJson from \"../Components/TextJson/TextJson.json\";\n\n// Création d'un contexte pour partager les données\nconst RestaurantContext = createContext(null);\n\n// Hook personnalisé pour utiliser les données du restaurant\nexport function useRestaurantData() {\n  return useContext(RestaurantContext);\n}\n\n// Provider qui va récupérer et fournir les données\nexport function RestaurantProvider({ children }) {\n  const [restaurantData, setRestaurantData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchRestaurantData() {\n      try {\n        // Récupération des données de la table restaurants\n        const { data, error } = await supabase\n          .from('restaurants')\n          .select('*')\n          .eq('id', TextJson.refRestaurant)  \n          .single();  \n\n        if (error) throw error;\n\n        // Récupération de l'adresse à partir de address_id\n        const { data: addressData, error: addressError } = await supabase\n          .from('addresses')\n          .select('*')\n          .eq('id', data.address_id)  // Utilisation de address_id\n          .single();\n\n        if (addressError) throw addressError;\n\n        // Ajout de l'adresse aux données du restaurant\n        data.address = addressData;\n\n        // Récupération des heures d'ouverture du restaurant\n        const { data: hoursData, error: hoursError } = await supabase\n          .from('restaurant_hour')\n          .select('*')\n          .eq('restaurant_id', data.id);  // Utilisation de l'id du restaurant\n\n        if (hoursError) throw hoursError;\n\n        // Ajout des heures d'ouverture aux données du restaurant\n        data.hours = hoursData;\n\n        setRestaurantData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données du restaurant:', error);\n        setError(error);\n        setLoading(false);\n      }\n    }\n\n    fetchRestaurantData();\n  }, []);\n\n  const value = {\n    restaurantData,\n    loading,\n    error\n  };\n\n  return (\n    <RestaurantContext.Provider value={value}>\n      {children}\n    </RestaurantContext.Provider>\n  );\n}\n\n// Fonction d'aide pour récupérer directement les données (alternative au contexte)\nexport async function getRestaurantData() {\n  const { data, error } = await supabase\n    .from('restaurants')\n    .select('*')\n    .limit(1)\n    .single();\n    \n  if (error) throw error;\n  return data;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}